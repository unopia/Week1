Service Method Pattern
   public void add(Object param);
   public int count();
   public Object findOne(String key);
   public ArrayList<Object> findBy(Object param);
   public ArrayList<Object> list();
   public void update(Object param);
   public void delete(String key);
==========================================
DAO 는 CRUD 를 개념으로 메소드를 작성한다
Create : INSERT
   String sql = "";
   SQLiteDatabase db = this.getWritableDatabase();
   db.execSQL(sql);
   db.close();
Read : SELECT
   SELECT COUNT(*) -> return Type is Number
   SELECT * FROM  -> return Type is ArrayList
   SELECT * FROM WHERE -> return Type is ArrayList
   SELECT * FROM WHERE -> return Type is One Instance

   String sql = "";
   SQLiteDatabase db = this.getReadableDatabase();
   Cursor cursor = db.rawQuery(sql,null);


Update : UPDATE
   String sql = "";
   SQLiteDatabase db = this.getWritableDatabase();
   db.execSQL(sql);
   db.close();
Delete : DELETE
   String sql = "";
   SQLiteDatabase db = this.getWritableDatabase();
   db.execSQL(sql);
   db.close();
===========================================
SQL DML Pattern
Create
   INSERT INTO table() VALUES();
Read Count
   SELECT COUNT(*) as count FROM table;
Read One
   SELECT * FROM table WHERE column = 'key';
Read Some
   SELECT * FROM table WHERE column = 'search word';
Read All
   SELECT * FROM table;
Update
   UPDATE table SET column1 = 'value',column2 = 'value'WHERE column = 'key';

Delete
   DELETE FROM table WHERE column = 'key';
===========================================
SQL DDL Pattern
CRUD

== BASE TABLE ==

CREATE TABLE IF NOT EXISTS table +
                (
                id TEXT PRIMARY KEY," +
               ...
               ...
               ...
                ");

== SUB TABLE ==

CREATE TABLE IF NOT EXISTS table2 (" +
                "_id INTEGER PRIMARY KEY AUTOINCREMENT,"+
                ...
		...
		...
                ID+" TEXT, CONSTRAINT fk_name FOREIGN KEY(id) REFERENCES "
                +TABLE+"("+ID+"));
DROP TABLE table;
